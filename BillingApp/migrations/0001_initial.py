# Generated by Django 4.2.7 on 2025-08-12 10:30

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Denomination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(unique=True)),
                ('count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-value'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('available_stocks', models.PositiveIntegerField(default=0)),
                ('price_per_unit', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('tax_percentage', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('total_amount', models.FloatField(default=0.0)),
                ('tax_amount', models.FloatField(default=0.0)),
                ('net_amount', models.FloatField(default=0.0)),
                ('rounded_amount', models.FloatField(default=0.0)),
                ('cash_paid', models.FloatField(default=0.0)),
                ('balance_amount', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BillingApp.customer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.FloatField()),
                ('tax_percentage', models.FloatField()),
                ('tax_amount', models.FloatField()),
                ('total_price', models.FloatField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BillingApp.product')),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='BillingApp.purchase')),
            ],
        ),
        migrations.CreateModel(
            name='BalanceDenomination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denomination_value', models.IntegerField()),
                ('count', models.PositiveIntegerField()),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balance_denominations', to='BillingApp.purchase')),
            ],
        ),
    ]
